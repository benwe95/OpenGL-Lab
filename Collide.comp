#version 430

layout (local_size_x = 32) in;

struct Particle
{
    vec3 position;
    vec3 velocity;
    vec3 acceleration;
    vec3 normal;
    vec3 tangent;
    vec2 texture;
};

layout(binding = 1) buffer particlesBlock
{
    Particle particles[];
};

void main()
{       
    uint index = gl_GlobalInvocationID.x;

    vec3 center = vec3(0.0, 0.0, 0.0); //centre de la sphere
    float radius = 1.f;  // rayon sphere 

    float distanceParticleCenter = distance(particles[index].position, center);
    if (distanceParticleCenter <= radius)
    {
        vec3 unitvec = normalize(particles[index].position - center);
        vec3 outofbounds = (distanceParticleCenter - radius + 0.01) * unitvec;
        particles[index].velocity = outofbounds;
        particles[index].position = particles[index].position + outofbounds;
    }
}